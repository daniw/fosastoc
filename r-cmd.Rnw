% coding:utf-8

%FOSASTOC, a LaTeX-Code for a electrical summary of stochastic
%Copyright (C) 2013, Daniel Winz, Ervin Mazlagic

%This program is free software; you can redistribute it and/or
%modify it under the terms of the GNU General Public License
%as published by the Free Software Foundation; either version 2
%of the License, or (at your option) any later version.

%This program is distributed in the hope that it will be useful,
%but WITHOUT ANY WARRANTY; without even the implied warranty of
%MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
%GNU General Public License for more details.
%----------------------------------------

\chapter{R Grundlagen}
\lstinline{R} ist eine multiparadigmatische Programmiersprache für 
Statistik und wird als Teil des GNU-Projektes entwickelt. Die 
Besonderheit von R liegt in der Implementation vieler Algorithmen
und Analysen der Statistik aber auch von vielseitigen Möglichkeiten 
des Plottens. Diese Stärken und die Tatsache, dass \lstinline{R} 
freie Software ist, haben es zu einem beliebten Tool in Wissenschaft
und Industrie gemacht.

\newpage

\setkeys{Gin}{width=1\textwidth}

\section{Informationen finden}
<<>>=
help(cat)
@

\section{Vektoren \& Matrizen definieren}
\paragraph{Vektor mit Intervall 1 definieren}
<<>>=
x <- 1:10; y <- 5:13
x; y
@

\paragraph{Vektor mit beliebigem festen Intevall definieren}
<<>>=
x <- seq(from=1, to=10, by=2); y <- seq(1, 10, 2)
x; y
@

\paragraph{Vektor manuell definieren}
<<>>=
x <- c(77, 29, 12, 33, 4, 9, 809, -27)
x
@

\paragraph{Matrix Spaltenweise definieren}
<<>>=
a <- seq(1, 9, 1); m <- matrix(a, 3)
m
@

\paragraph{Matrix Reihenweise definieren}
<<>>=
a <- seq(1, 9, 1)
m <- matrix(a, 3, byrow=TRUE)
m
@

\section{Arithmetik}
\paragraph{Einfache Summen und Produkte}
<<>>=
a=15; b=3
a+b; a*b; a-b; a/b
@

\paragraph{Operationen auf Vektoren}
<<>>=
a <- 1:10; b <- 2
c <- b*a
a
c
@

\paragraph{Operationen auf Matrizen}
<<>>=
a <- seq(1, 9, 1); b <- 2
m <- matrix(a, 3); n <- m*b
m
n
@

\section{Plots}

\subsection{Gewöhnlicher Plot}
Um einen gewöhnlichen Plot zu erstellen kann \lstinline{plot()}
verwendet werden. 

<<plot, fig=FALSE>>=
x <- c(1:20)
y <- (runif(n=20))
plot(x, y)
@

\subsubsection{Linien plotten}
Möchte man einen Plot ergänzen mit Linien kann nach \lstinline{plot()}
noch \lstinline{abline()} benutzt werden.

<<abline, fig=FALSE>>=
x <- c(1:20)
y <- (runif(n=20))
plot(x, y)
abline(h=mean(y))
@

\subsubsection{Segmente plotten}
Möchte man beispielsweise die Abweichung von Daten und Mittelwert
zeigen, kann \lstinline{segments()} benutzt werden. Dieses ist in der
Lage mehrere Liniensegmente zu einem Plot hinzuzufügen.

<<segments, fig=FALSE>>=
x <- c(1:20)
y <- (runif(n=20))
plot(x, y)
abline(h=mean(y))
segments(x0=x, y0=mean(y), x1=x, y1=y)
@

\subsubsection{Flächen plotten}
Möchte man Rechtecke oder Flächen in einen Plot einfügen so kann man 
\lstinline{rect()} benutzen. Im folgenden ein Beispiel zur Darstellung
der Varianz.

<<rect, fig=FALSE>>=
x <- c(1:20)
y <- (runif(n=20, min=3, max=7))
plot(x, y, ylim=c(0, 10))
abline(h=mean(y))
diff <- sqrt((y-mean(y))^2)
rect(xleft=x, xright=(x+diff), ybottom=mean(y), ytop=y, col='gray')
@

\begin{figure}[h!]
\centering
\begin{subfigure}[b]{0.48\textwidth}
<<fig=TRUE, echo=FALSE>>=
<<plot>>
@
\caption{Gewöhnlicher Plot mit \lstinline{plot()}}
\end{subfigure}
\begin{subfigure}[b]{0.48\textwidth}
<<fig=TRUE, echo=FALSE>>=
<<abline>>
@
\caption{Linie mit \lstinline{abline()}}
\end{subfigure}

\begin{subfigure}[b]{0.48\textwidth}
<<fig=TRUE, echo=FALSE>>=
<<segments>>
@
\caption{Segmente mit \lstinline{segments()}}
\end{subfigure}
\begin{subfigure}[b]{0.48\textwidth}
<<fig=TRUE, echo=FALSE>>=
<<rect>>
@
\caption{Flächen mit \lstinline{rect()}}
\end{subfigure}

\end{figure}

\subsection{Boxplot}
